hardware:
  windfreak:
    module.Class: frequency_generator.WindFreak.WindFreak
    serial_device: 'COM3'

  rohdeschwarz:
    module.Class: oscilloscope.RTE.RohdeSchwarz
    address: 'TCPIP::10.118.16.6::INSTR'
    visa_timeout: 1000
    opc_timeout: 3000
    measurement_timing: 400

  thorlabs_camera:
    module.Class: camera.thorlabs.thorlabs_DCx.CameraThorlabs
    default_exposure: 0.1
    default_gain: 1.0
    id_camera: 0

  high_finesse_wavemeter:
    module.Class: high_finesse_wavemeter.HighFinesseWavemeter
    measurement_timing: 100

  simpledatadummy:
    module.Class: simple_data_dummy.SimpleDummy
  microwave_dummy:
    module.Class: microwave.mw_source_dummy.MicrowaveDummy
    gpib_address: dummy
    gpib_timeout: 20
  mydummyscanner:
    module.Class: confocal_scanner_dummy.ConfocalScannerDummy
    clock_frequency: 100
    connect:
      fitlogic: fitlogic
  mydummycounter:
    module.Class: slow_counter_dummy.SlowCounterDummy
    source_channels: 4
    clock_frequency: 100
    count_distribution: dark_bright_poisson
    remoteaccess: true
  mydummyodmrcounter:
    module.Class: odmr_counter_dummy.ODMRCounterDummy
    clock_frequency: 100
    number_of_channels: 3
    connect:
      fitlogic: fitlogic
  mydummyfastcounter:
    module.Class: fast_counter_dummy.FastCounterDummy
  mydummypulser:
    module.Class: pulser_dummy.PulserDummy
  mydummywavemeter:
    module.Class: wavemeter_dummy.WavemeterDummy
    measurement_timing: 10
  mydummyswitch1:
    module.Class: switches.switch_dummy.SwitchDummy
  mydummyswitch2:
    module.Class: switches.switch_dummy.SwitchDummy
  myspectrometer:
    module.Class: spectrometer.spectrometer_dummy.SpectrometerInterfaceDummy
    connect:
      fitlogic: fitlogic
  motordummy:
    module.Class: motor.motor_dummy.MotorDummy
  magnetdummy:
    module.Class: magnet.magnet_dummy.MagnetDummy
  processdummy:
    module.Class: process_dummy.ProcessDummy
  laserdummy:
    module.Class: laser.simple_laser_dummy.SimpleLaserDummy
  cameradummy:
    module.Class: camera.camera_dummy.CameraDummy

gui:
  finessemeasurement:
    module.Class: 'finesse_measurement.finessemeasurementgui.FinesseMeasurementGUI'
    connect:
      finesselogic: 'finesselogic'
      savelogic: savelogic
  
  finesse:
    module.Class: finesse.ui_finesse.FinesseGui
    connect:
      finessecalclogic: 'finessecalclogic'

  modespectrum:
    module.Class: 'modespectrum.modespectrumgui.ModeSpectrumGUI'
    connect:
      savelogic: savelogic
      modespectrumlogic: 'modespectrumlogic'

  frequencygenerator:
    module.Class: 'freqgen.freqgen_gui.FrequencyGeneratorGUI'
    connect:
      generatorlogic: 'frequencygeneratorlogic'

  wavemeter:
    module.Class: 'wavemeter.wavemeter_gui.wavemeterGUI'
    connect:
      cavitylength_logic: cavitylength_logic


  tray:
    module.Class: trayicon.TrayIcon
  man:
    module.Class: manager.managergui.ManagerGui
  counter:
    module.Class: counter.countergui.CounterGui
    connect:
      counterlogic1: counterlogic
  confocal:
    module.Class: confocal.confocalgui.ConfocalGui
    connect:
      confocallogic1: scannerlogic
      savelogic: savelogic
      optimizerlogic1: optimizerlogic
    fixed_aspect_ratio_xy: true
    fixed_aspect_ratio_depth: true
    slider_stepsize: 0.001
    image_x_padding: 0.02
    image_y_padding: 0.02
    image_z_padding: 0.02
    default_meter_prefix: u
  poimanager:
    module.Class: poimanager.poimangui.PoiManagerGui
    connect:
      poimanagerlogic: poimanagerlogic
      scannerlogic: scannerlogic
  odmr:
    module.Class: odmr.odmrgui.ODMRGui
    connect:
      odmrlogic1: odmrlogic
      savelogic: savelogic
  wavemeterlogger:
    module.Class: wavemeterlogger.wavemeterloggui.WavemeterLogGui
    connect:
      wavemeterloggerlogic1: wavemeterloggerlogic
      savelogic: savelogic
  switches:
    module.Class: switcher.switchgui.SwitchGui
    connect:
      switchlogic: switchlogic
  taskrunner:
    module.Class: taskrunner.taskgui.TaskGui
    connect:
      tasklogic: tasklogic
  automation:
    module.Class: automation.automationgui.AutomationGui
    connect:
      automationlogic: automationlogic
  spectrometer:
    module.Class: spectrometer.spectrometergui.SpectrometerGui
    connect:
      spectrumlogic: spectrumlogic
  pulsedmeasurement:
    module.Class: pulsed.pulsed_maingui.PulsedMeasurementGui
    connect:
      pulsedmasterlogic: pulsedmasterlogic
  simpledata:
    module.Class: simpledatagui.simpledatagui.SimpleDataGui
    connect:
      simplelogic: simpledatalogic
  magnet:
    module.Class: magnet.magnet_gui.MagnetGui
    connect:
      magnetlogic1: magnet_logic
      savelogic: savelogic
  gatedcounter:
    module.Class: gated_counter.gated_counter_gui.GatedCounterGui
    connect:
      gatedcounterlogic1: gatedcounterlogic
      traceanalysislogic1: trace_analysis_logic
  pidcontrol:
    module.Class: pidgui.pidgui.PIDGui
    connect:
      pidlogic: pidlogic
  errortest:
    module.Class: testgui.TestGui
    text: Random text from config
    error: This config is required!
  qdplotter:
    module.Class: qdplotter.qdplottergui.QdplotterGui
    connect:
      qdplotlogic1: qdplotlogic
  nuclearops:
    module.Class: nuclear_operations.nuclear_operations.NuclearOperationsGui
    connect:
      nuclearoperationslogic: nuopslogic
      savelogic: savelogic
  laser:
    module.Class: laser.laser.LaserGUI
    connect:
      laserlogic: laserlogic
  laserscanner:
    module.Class: laserscanner.laserscannergui.VoltScanGui
    connect:
      voltagescannerlogic1: laserscannerlogic
      savelogic: savelogic
  odmrgui_program_trigger:
    module.Class: odmr.odmrgui.ODMRGui
    connect:
      odmrlogic1: odmrlogic2
      savelogic: savelogic
  camera_gui:
    module.Class: camera.cameragui.CameraGUI
    connect:
      camera_logic: camera_logic
      savelogic: savelogic


logic:
  frequencygeneratorlogic:
    module.Class: 'frequencygenerator_logic.FrequencyGeneratorLogic'
    connect:
        generator: 'windfreak'

  finesselogic:
    module.Class: 'finesse_logic.FinesseLogic'
    connect:
        oscilloscope: 'rohdeschwarz'
        savelogic: savelogic
        fitlogic: fitlogic

  modespectrumlogic:
    module.Class: 'modespectrum_logic.ModeSpectrumLogic'
    connect:
        oscilloscope: 'rohdeschwarz'
        savelogic: savelogic
        fitlogic: fitlogic

  cavitylength_logic:
    module.Class: 'wavemeter_logic.WavemeterLogic'
    logic_acquisition_timing: 10
    connect:
        wavemeter1: 'high_finesse_wavemeter'

  finessecalclogic:
    module.Class: 'finessecalc_logic.FinesseCalcLogic'

  simpledatalogic:
    module.Class: simple_data_logic.SimpleDataLogic
    connect:
      simpledata: simpledatadummy
  softpid:
    module.Class: software_pid_controller.SoftPIDController
    connect:
      process: processdummy
      control: processdummy
  pidlogic:
    module.Class: pid_logic.PIDLogic
    connect:
      controller: softpid
      savelogic: savelogic
  kernellogic:
    module.Class: jupyterkernel.kernellogic.QudiKernelLogic
    remoteaccess: true
  pulsedmasterlogic:
    module.Class: pulsed.pulsed_master_logic.PulsedMasterLogic
    connect:
      pulsedmeasurementlogic: pulsedmeasurementlogic
      sequencegeneratorlogic: sequencegeneratorlogic
  sequencegeneratorlogic:
    module.Class: pulsed.sequence_generator_logic.SequenceGeneratorLogic
    connect:
      pulsegenerator: mydummypulser
  pulsedmeasurementlogic:
    module.Class: pulsed.pulsed_measurement_logic.PulsedMeasurementLogic
    raw_data_save_type: text
    connect:
      fastcounter: mydummyfastcounter
      pulsegenerator: mydummypulser
      fitlogic: fitlogic
      savelogic: savelogic
      microwave: microwave_dummy
  counterlogic:
    module.Class: counter_logic.CounterLogic
    connect:
      counter1: mydummycounter
      savelogic: savelogic
  gatedcounterlogic:
    module.Class: counter_logic.CounterLogic
    connect:
      counter1: mydummycounter
      savelogic: savelogic
  wavemeterloggerlogic:
    module.Class: wavemeter_logger_logic.WavemeterLoggerLogic
    logic_acquisition_timing: 20
    logic_update_timing: 100
    connect:
      wavemeter1: high_finesse_wavemeter
      savelogic: savelogic
      counterlogic: counterlogic
      fitlogic: fitlogic
  switchlogic:
    module.Class: switch_logic.SwitchLogic
    connect:
      switch1: mydummyswitch1
      switch2: mydummyswitch2
  scannerlogic:
    module.Class: confocal_logic.ConfocalLogic
    connect:
      confocalscanner1: scanner_tilt_interfuse
      savelogic: savelogic
  scanner_tilt_interfuse:
    module.Class: interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse
    connect:
      confocalscanner1: mydummyscanner
  optimizerlogic:
    module.Class: optimizer_logic.OptimizerLogic
    connect:
      confocalscanner1: scanner_tilt_interfuse
      fitlogic: fitlogic
  poimanagerlogic:
    module.Class: poi_manager_logic.PoiManagerLogic
    connect:
      scannerlogic: scannerlogic
      optimiserlogic: optimizerlogic
      savelogic: savelogic
  odmrlogic:
    module.Class: odmr_logic.ODMRLogic
    connect:
      odmrcounter: mydummyodmrcounter
      fitlogic: fitlogic
      microwave1: microwave_dummy
      savelogic: savelogic
      taskrunner: tasklogic
  odmr_counter_microwave_interfuse:
    module.Class: interfuse.odmr_counter_microwave_interfuse.ODMRCounterMicrowaveInterfuse
    connect:
      slowcounter: mydummycounter
      microwave: microwave_dummy
  odmrlogic2:
    module.Class: odmr_logic.ODMRLogic
    connect:
      odmrcounter: odmr_counter_microwave_interfuse
      fitlogic: fitlogic
      microwave1: odmr_counter_microwave_interfuse
      savelogic: savelogic
      taskrunner: tasklogic
    scanmode: LIST
  laserscannerlogic:
    module.Class: laser_scanner_logic.LaserScannerLogic
    connect:
      confocalscanner1: mydummyscanner
      savelogic: savelogic
  fitlogic:
    module.Class: fit_logic.FitLogic
  tasklogic:
    module.Class: taskrunner.TaskRunner
    tasks:
      scannerLocationRefocus:
        module: refocus
        pausetasks:
        - scan
        - odmr
        needsmodules:
          optimizer: optimizerlogic
  automationlogic:
    module.Class: automation.AutomationLogic
    connect:
      taskrunner: tasklogic
  savelogic:
    module.Class: save_logic.SaveLogic
    win_data_directory: C:/Data
    unix_data_directory: Data/
    log_into_daily_directory: true
    save_pdf: true
    save_png: false
  spectrumlogic:
    module.Class: spectrum.SpectrumLogic
    connect:
      spectrometer: myspectrometer
      savelogic: savelogic
      odmrlogic: odmrlogic
      fitlogic: fitlogic
  magnet_logic:
    module.Class: magnet_logic.MagnetLogic
    connect:
      magnetstage: magnetdummy
      optimizerlogic: optimizerlogic
      counterlogic: counterlogic
      odmrlogic: odmrlogic
      savelogic: savelogic
      scannerlogic: scannerlogic
      traceanalysis: trace_analysis_logic
      gatedcounterlogic: gatedcounterlogic
      sequencegeneratorlogic: sequencegeneratorlogic
  magnet_motor_interfuse:
    module.Class: interfuse.magnet_motor_interfuse.MagnetMotorInterfuse
    connect:
      motorstage: motordummy
  trace_analysis_logic:
    module.Class: trace_analysis_logic.TraceAnalysisLogic
    connect:
      counterlogic1: gatedcounterlogic
      savelogic: savelogic
      fitlogic: fitlogic
  qdplotlogic:
    module.Class: qdplot_logic.QdplotLogic
    connect:
      savelogic: savelogic
  nuopslogic:
    module.Class: nuclear_operations_logic.NuclearOperationsLogic
    connect:
      sequencegenerationlogic: sequencegeneratorlogic
      traceanalysislogic: trace_analysis_logic
      gatedcounterlogic: gatedcounterlogic
      odmrlogic: odmrlogic
      optimizerlogic: optimizerlogic
      scannerlogic: scannerlogic
      savelogic: savelogic
  laserlogic:
    module.Class: laser_logic.LaserLogic
    connect:
      laser: laserdummy
  camera_logic:
    module.Class: camera_logic.CameraLogic
    connect:
      hardware: cameradummy
      savelogic: savelogic

global:
  startup:
  - man
  - tray
  module_server:
    address: localhost
    port: 12345
  stylesheet: qdark.qss
